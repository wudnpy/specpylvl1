Домашнее задание.
	1. Написать генератор функцию, которая будет использовать поиск в ширину.
	2. Написать функцию, которая по заданному пути посчитает его штрафы.
	3. Добавить параметр коммандной строки (переключатель), который будет определять какой тип поиска использовать (в глубину (поумолчанию) или в ширину).
	4. Добавить параметр коммандной строки (переключатель), который если он присутствует выводит вместо номеров вершин их имена.
	
Модуль logging.
	Если не указать файл для журнала приложения, сообщения будут отправляться в stderr.
	
	1. Системный журнал(System log)
	2. Журнал приложения (Application log)
		Пишется либо в формате csv, либо в формате "полей с фиксированной шириной".
	3. Операционный дневник
	
	Уровень серьезности журнала.
		Поумолчанию это warning.
			Сообщения с уровнем серьезности меньше чем warning будут игнорироваться.
		
		Изменение уровня серьезности журнала:
			Пишется сразу после import logging или если используется модуль argparse, после функции parse_args(), т.к. в этом случае формат журнала задается 
			через параметры коммандной строки.
			logging.basicConfig(
				level = logging.DEBUG
			)
			Функция basicConfig вызывается только 1 раз в главном файле программы, модуль (logging) импортируется во всех файлах где он необходим.
	
	Уровень серьезности ошибки.
	severity:
		1. Debug (отладочное сообщение).
		2. Info/Notify (обычное сообщение).
		#В Python не используется. 3. Hint (подсказка сообщение - присутствует не во всех языках, используется в операционном журнале).
		4. Warning(предупреждение - не ошибка, но может привести к ошибкам в будущем).
		5. Error (ошибка - ситуация, когда ту операцию которую проводим в данный момент, пользователь не может сделать, но он может продолжить работу и выполнить другие операции).
		6. Fatal/Critical error (невозможность продолжать работу программы).
		#Встречается только при программировании ядра. 7. Panic (ситуация, когда наша ошибка положила ОС/Ядро).
		
	Структура журнала.
		Поумолчанию:
			DEBUG:root:First: D Last: B
			Уровень серьезности ошибки:Логин Пользователя:Сообщение
		
		Изменение формата журнала:
			Полезные параметры:
				filename - имя файла из которого выдано сообщение.
				lineno - номер строки из которой выдано сообщение.
				module - имя модуля из которого выдано сообщение.
				funcName - имя функции из которой выдано сообщение.
				name - логин пользователя под которым работаем.
				message - сообщение которое было выдано.
				# Корректно работают только на системах Linux и Mac
				process - идентификатор процесса из которого выдано сообщение.
				# Возможно корректно работает на Windows. processName - имя процесса из которого выдано сообщение.
				
				logging.basicConfig(
					level=logging.DEBUG,
					style='{',
					format='{levelname:8} {asctime} {name:10} {message}' # :8 используется для определения формата длинны параметра levelname (на данный момент его длина составляет 8 символов).
				)
		
		
		
	
	
		
	